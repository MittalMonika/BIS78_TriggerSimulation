#############################################################################################
package MuonInSituPerformance
author Nectarios Chr. Benekos <Nectarios.Benekos@cern.ch>
author Matthias Schott        <Matthias.Schott@cern.ch>
author Massimiliano Bellomo   <massimiliano.bellomo@pv.infn.it>

The general purpose of the MuonValidation Package is to validate the muon reconstruction in different ways. 
We follow two different approaches:

The first approach(MuonRecValidator) is based on Monte Carlo Truth information and determines: 
	-efficiencies, fake-rates and resolution for different muon reconstuction algorithms. 

The second approach does not depend on Monte Carlo but uses the Z-Boson decay into two muons to determine the Muon Spectrometer Performance within data.
	-MuonInSituPerformance

The package MuonUtils describes basic classes for the other two packages: MuonRecValidator and MuonInSituPerformance 

-A wiki documentation is here: https://twiki.cern.ch/twiki/bin/view/Atlas/MuonRecValidator

Recentry an updated version of MuonValidation code is available in CVS, which include full Event Filter trigger information for all analysis techniques. 
(Massimiliano Bellomo)

The new new tags are:
MuonInSituPerformance-00-00-03
MuonValUtils-00-00-05
MuonRecValidator-00-00-12

Main changes, with respect to the previous tags, are:

1) Trigger information from EF is inserted and associated with following labels

Trigger_Level_3_MS : only data from Muon Spectrometer is used, no energy lost correction is applied
Trigger_Level_3_MV : track from MS is extrapolated to the interaction vertex and the energy lost is corrected
Trigger_Level_3_CB : track is refitted using Inner Tracker hits

2)  TriggerDecision object is loaded in MSEvent and can be tested with MSEvent function

isTriggered(unsigned int level, std::string item)

where, for example in default option,
level = TriggerDecision::EF;
item = "EF_mu20i";

Now all events are used, with this you can select a sub-sample of triggered events and make relative efficiency calculations.

3) JobOption MuonRecValidationAOD.py has been modified to use MuidCollection tracks via the flag useSTACO = False

4) Analysis of trigger efficiency using MC informations has been extended also to EF level with coherent directories for histograms

5) Analysis of trigger efficiency with Tag&Probe method also can be done using EF trigger

6) Analysis of trigger efficiency with DO method has been included in MSInsituPerformance for EF trigger level (only). 
As a consequence of the method logic, signal and background samples have to be summed at the end of the analysis from Athena, 
a ROOT macro (DO_method.C) has been implemented to fit spectra and extract trigger efficiency.

This macro is located in MSInsituPerformance-xx-xx-xx/macros directory. 
Below are the instructions if someone wants to run it interactively in ROOT for test puspose with:

.L DO_method.C
char *argv[2]
argv[0] = "main"
argv[1] = "path_to_your_root_file/filename.root"
main(2,argv)

OR
-compile it as a C++ code (a Makefile is provided) and run from command line (./DO_method -h for help). 

Now it makes the fit with only signal, updated versions will be ready as soon as background samples will be analyzed.
 
############################################################################################# 
 
