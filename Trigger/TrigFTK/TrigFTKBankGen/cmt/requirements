package TrigFTKBankGen

author Guido Volpi <guido.volpi@cern.ch>

public
use AtlasPolicy AtlasPolicy-*
#use StoreGate                  StoreGate-*                Control
#use EventInfo                  EventInfo-*                Event
#use AtlasHepMC                 AtlasHepMC-*               External
use AtlasROOT       AtlasROOT-*       External
use AtlasBoost		        AtlasBoost-*		   External
use AthenaKernel                AthenaKernel-*             Control

use GaudiInterface GaudiInterface-* External
use AthenaBaseComps     AthenaBaseComps-*       Control
use TrigFTKSim TrigFTKSim-* Trigger/TrigFTK
use AthenaKernel AthenaKernel-* Control
use GaudiInterface GaudiInterface-* External
use AtlasBoost AtlasBoost-* External

#private
#use GaudiInterface GaudiInterface-* External
use AtlasCLHEP                  AtlasCLHEP-*               External

#end_private

apply_pattern component_library
apply_pattern declare_joboptions files="-k=.*job[oO]ptions.py *job[Oo]ptions.py MC12.184002.ParticleGenerator_mu_Pt1to1000_Eta30_x10_FTK.py MC12.184002.ParticleGenerator_pi_Pt1to1000_Eta30_x10_FTK.py MC12.184002.ParticleGenerator_mu_Pt1to1000_Eta30_FTK.py MC12.184002.ParticleGenerator_pi_Pt1to1000_Eta30_FTK.py"

# Add transform
#private
apply_pattern declare_job_transforms tfs='*_tf.py' jo='skeleton.*.py'
apply_pattern generic_declare_for_link kind=json files="../share/$(package)Signatures.json" prefix=share/JobTransforms
#end_private

library TrigFTKBankGen *.cxx components/*.cxx

# the following two lines are required to enable the debug flags
#macro cppdebugflags '$(cppdebugflags_s)'
#macro_remove componentshr_linkopts "-Wl,-s"

private
macro_append cppflags "-DHAVE_BOOST_IOSTREAMS "
