package TrigCostMonitor
author Rustem Ospanov

use AtlasPolicy              AtlasPolicy-*
use AtlasCOOL                AtlasCOOL-*                External 
use GaudiInterface           GaudiInterface-*           External
use DataCollection           DataCollection-*           External
use AthenaMonitoring         AthenaMonitoring-*         Control
use StoreGate                StoreGate-*                Control

use TrigConfInterfaces       TrigConfInterfaces-*       Trigger/TrigConfiguration
use TrigConfJobOptData       TrigConfJobOptData-*       Trigger/TrigConfiguration
use TrigDecisionTool         TrigDecisionTool-*         Trigger/TrigAnalysis
use TrigMonitoringEvent      TrigMonitoringEvent-*      Trigger/TrigEvent
use TrigSteering             TrigSteering-*             Trigger/TrigSteer
use TrigTimeAlgs             TrigTimeAlgs-*             Trigger/TrigTools

apply_pattern dual_use_library files=*.cxx
apply_pattern declare_python_modules files="TrigCost*.py"
apply_pattern declare_joboptions files="*.py"

private

apply_tag NEEDS_CORAL_BASE
apply_tag NEEDS_COOL_FACTORY

use AtlasReflex              AtlasReflex-*              External -no_auto_import
use AtlasROOT                AtlasROOT-*                External
use AtlasCORAL               AtlasCORAL-*               External 
use AtlasBoost               AtlasBoost-*               External
use AthenaKernel             AthenaKernel-*             Control
#use AthenaPoolKernel         AthenaPoolKernel-*         Database/AthenaPOOL
use EventInfo                EventInfo-*                Event
use GeneratorObjects         GeneratorObjects-*         Generators
use TruthHelper              TruthHelper-*              Generators/GenAnalysisTools

use TrigConfL1Data           TrigConfL1Data-*           Trigger/TrigConfiguration
use TrigConfHLTData          TrigConfHLTData-*          Trigger/TrigConfiguration
use TrigConfStorage          TrigConfStorage-*          Trigger/TrigConfiguration

use TrigDataAccessMonitoring TrigDataAccessMonitoring-* Trigger/TrigDataAccess
use TrigInterfaces           TrigInterfaces-*           Trigger/TrigSteer
use TrigNavigation           TrigNavigation-*           Trigger/TrigEvent
use TrigSteeringEvent        TrigSteeringEvent-*        Trigger/TrigEvent
use TrigT1Interfaces	     TrigT1Interfaces-*         Trigger/TrigT1
use TrigT1Result	     TrigT1Result-*             Trigger/TrigT1
use TrigSerializeResult      TrigSerializeResult-*      Trigger/TrigDataAccess

apply_pattern lcgdict dict=TrigCostMonitor \
	              selectionfile=selection.xml \
	              headerfiles="../TrigCostMonitor/TrigCostMonitorDict.h"

#macro cppdebugflags '$(cppdebugflags_s)'
end_private
