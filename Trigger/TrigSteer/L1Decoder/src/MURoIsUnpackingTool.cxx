///////////////////////// -*- C++ -*- /////////////////////////////
// MURoIsUnpackingTool.cxx 
// Implementation file for class MURoIsUnpackingTool
// Author: S.Binet<binet@cern.ch>
/////////////////////////////////////////////////////////////////// 

// L1Decoder includes
#include "MURoIsUnpackingTool.h"

// STL includes

// FrameWork includes
#include "GaudiKernel/IToolSvc.h"

// StoreGate
#include "StoreGate/StoreGateSvc.h"



/////////////////////////////////////////////////////////////////// 
// Public methods: 
/////////////////////////////////////////////////////////////////// 

// Constructors
////////////////
MURoIsUnpackingTool::MURoIsUnpackingTool( const std::string& type, 
		      const std::string& name, 
		      const IInterface* parent ) : 
  ::AthAlgTool  ( type, name, parent   ),
  m_storeGate( "StoreGateSvc", name )
{
  //
  // Property declaration
  // 
  //declareProperty( "Property", m_nProperty );

}

// Destructor
///////////////
MURoIsUnpackingTool::~MURoIsUnpackingTool()
{}

// Athena algtool's Hooks
////////////////////////////
StatusCode MURoIsUnpackingTool::initialize()
{
  ATH_MSG_INFO ("Initializing " << name() << "...");

  // Get pointer to StoreGateSvc and cache it :
  if ( !m_storeGate.retrieve().isSuccess() ) {
    ATH_MSG_ERROR ("Unable to retrieve pointer to StoreGateSvc");
    return StatusCode::FAILURE;
  }
  
  return StatusCode::SUCCESS;
}

StatusCode MURoIsUnpackingTool::finalize()
{
  ATH_MSG_INFO ("Finalizing " << name() << "...");

  return StatusCode::SUCCESS;
}

/////////////////////////////////////////////////////////////////// 
// Const methods: 
///////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////// 
// Non-const methods: 
/////////////////////////////////////////////////////////////////// 

/////////////////////////////////////////////////////////////////// 
// Protected methods: 
/////////////////////////////////////////////////////////////////// 

/////////////////////////////////////////////////////////////////// 
// Const methods: 
///////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////// 
// Non-const methods: 
/////////////////////////////////////////////////////////////////// 


