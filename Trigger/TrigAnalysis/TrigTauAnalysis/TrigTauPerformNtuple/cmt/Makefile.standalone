# -------------------------------------------------------------
# This makefile is designed to compile a ROOT library
# independent of the Atlas framework.  You only need to
# have ROOTSYS pointing to a valid ROOT installation.
# This has been tested on Linux and OS X, but should work
# for any architecture supported in ROOT Makefile.arch

# --- External configuration ----------------------------------
include $(ROOTSYS)/test/Makefile.arch

MFLAGS   = -MM -Wall -W -Woverloaded-virtual

# debug
#CXXFLAGS += -O0 -g

# -------------------------------------------------------------

BASEDIR   = ..
WORKDIR   = $(BASEDIR)/tmp
LIBDIR    = $(shell cd $(BASEDIR) && pwd)

# Internal configuration
PACKAGE=TrigTauPerformNtuple

INCDIR=$(BASEDIR)/$(PACKAGE)
OBJDIR=$(WORKDIR)
SRCDIR=$(BASEDIR)/src

# The following specifies where make looks for prerequisites
# VPATH=$(INCDIR) $(SRCDIR) $(OBJDIR)

# Better to do it this way?
vpath %.h   $(INCDIR)
vpath %.cxx $(SRCDIR)
vpath %.o   $(OBJDIR)
vpath %.d   $(WORKDIR)

HHLIST_EXCLUDE = $(PACKAGE)LinkDef.h TrigTauEvent_ClassDefs.h
CXXFLAGS += -I$(BASEDIR)
ROOTSYS  ?= ERROR_RootSysIsNotDefined
HHLIST    = $(filter-out $(HHLIST_EXCLUDE) , $(patsubst $(INCDIR)/%h, %h, $(wildcard $(INCDIR)/*.h)))

CINTFILE  = $(PACKAGE)Cint.cxx
CINTOBJ   = $(PACKAGE)Cint.o
SHLIBFILE = lib$(PACKAGE).so

ifeq ($(PLATFORM),macosx)
EXTRALDFLAGS = -install_name @rpath/$(SHLIBFILE)
endif

# get libraries of ROOT
define ldlinksuffixROOT
   $(addsuffix $(LDLINKSUFFIX),$(Lib)) $(shell if [ "$(findstring -Ldlink2,$(OPTIONS))" ]; then echo $(addsuffix _pkgid_$(ROOTVER),$(Lib)); fi)
endef

default: shlib
#default: testvars

# List of all source files to build
CCLIST=$(filter-out $(SKIPLIST),$(patsubst $(SRCDIR)/%cxx, %cxx, $(wildcard $(SRCDIR)/*.cxx)))

# List of all object files to build
OLIST=$(patsubst %.cxx,%.o,$(CCLIST))

# List of all dependency file to make
DLIST=$(patsubst %.h,%.d,$(HHLIST))

testvars:
	@echo $(HHLIST)
	@echo $(CCLIST)
	@echo $(OLIST)
	@echo $(DLIST)

# Implicit rule making all dependency Makefiles included at the end of this makefile
$(WORKDIR)/%.d: %.cxx $(HHLIST)
	@echo "Making $@"
	@mkdir -p $(WORKDIR)
	@set -e; $(CC) $(MFLAGS) $(CXXFLAGS) $< \
	  | sed 's/\($(notdir $*)\)\.o[ :]*/\1.o $(notdir $@) : /g' > $@; \
	  [ -s $@ ] || rm -f $@

# Implicit rule to compile all classes
%.o : %.cxx 
	@echo "Compiling $<"
	@mkdir -p $(OBJDIR)
	@$(CXX) $(CXXFLAGS) -c $< -o $(OBJDIR)/$(notdir $@)

# Rule to make ROOTCINT output file
$(OBJDIR)/$(CINTOBJ): $(HHLIST) $(INCDIR)/$(PACKAGE)LinkDef.h
	@mkdir -p $(OBJDIR)
	@echo "Running rootcint"
	@$(ROOTSYS)/bin/rootcint -f $(WORKDIR)/$(CINTFILE) -c $(CXXFLAGS) \
		-I$(INCDIR) $(HHLIST) $(PACKAGE)LinkDef.h
	@echo "Compiling $(CINTFILE)"
	@$(CXX) $(CXXFLAGS) -I$(INCDIR) -c $(WORKDIR)/$(CINTFILE) -o $@

# Rule to combine objects into a shared library
$(LIBDIR)/$(SHLIBFILE): $(OLIST) $(OBJDIR)/$(CINTOBJ)
	@echo "Making $(SHLIBFILE)"
	@rm -f $(LIBDIR)/$(SHLIBFILE)
	@cd $(WORKDIR) && $(LD) $(CXXFLAGS) $(SOFLAGS) $(EXTRALDFLAGS) $(addprefix $(OBJDIR)/, $(OLIST)) $(OBJDIR)/$(CINTOBJ) -o $(LIBDIR)/$(SHLIBFILE)

# Useful build targets
shlib: $(LIBDIR)/$(SHLIBFILE)

clean:
	rm -rf $(WORKDIR)
	rm -f $(LIBDIR)/$(SHLIBFILE)

.PHONY : shlib lib default clean

-include $(addprefix $(WORKDIR)/,$(DLIST))
