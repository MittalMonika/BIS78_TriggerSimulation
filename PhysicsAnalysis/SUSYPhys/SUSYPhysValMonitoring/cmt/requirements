## automatically generated CMT requirements file
package SUSYPhysValMonitoring
author  mann

## for athena policies: this has to be the first use statement
use AtlasPolicy 	AtlasPolicy-*

## for gaudi tools, services and objects
use GaudiInterface 	GaudiInterface-* 	External

## put here your package dependencies...
use AthenaMonitoring    AthenaMonitoring-*      Control
use AthenaBaseComps     AthenaBaseComps-*       Control
use AtlasROOT           AtlasROOT-*             External
use AtlasCLHEP          AtlasCLHEP-*            External

use StoreGate           StoreGate-*             Control
use AnalysisTools       AnalysisTools-*         PhysicsAnalysis/AnalysisCommon

use xAODJet             xAODJet-*               Event/xAOD
use xAODCaloEvent       xAODCaloEvent-*         Event/xAOD
use xAODEgamma          xAODEgamma-*            Event/xAOD 
use xAODMuon            xAODMuon-*              Event/xAOD 
use xAODTau             xAODTau-*               Event/xAOD 
use xAODMissingET       xAODMissingET-*         Event/xAOD 
use xAODTruth           xAODTruth-*             Event/xAOD 
use xAODTracking        xAODTracking-*          Event/xAOD 
use xAODEventInfo       xAODEventInfo-*         Event/xAOD 


##

branches src src/components doc python share

private

### default is to make component library
library SUSYPhysValMonitoring *.cxx components/*.cxx

#macro_append cppflags ' -std=c++11 '
#macro_append use_linkopts ' -std=c++11 ' 

### add -lEG needed for TDatabasePDG
# macro_append   ROOT_linkopts " -lEG "
macro_append rootBasicLibs " -lEG "  
###

### put jobOption in InstallArea
apply_pattern component_library
apply_pattern declare_joboptions files="*.py"
apply_pattern declare_python_modules files="*.py"

end_private


################ activate DEBUG MODE here
#macro cppdebugflags '$(cppdebugflags_s)'
#macro_remove componentshr_linkopts "-Wl,-s"
################ 


############################################ legacy (partly still needed) ############################################

#use GaudiInterface              GaudiInterface-*                External
#use AtlasROOT                   AtlasROOT-*                     External
#use AthenaBaseComps             AthenaBaseComps-*               Control

#use AtlasDoxygen                AtlasDoxygen-*                  Tools

use TrigDecisionTool            TrigDecisionTool-*              Trigger/TrigAnalysis

#use Particle                    Particle-*                      Reconstruction
use McParticleEvent             McParticleEvent-*               PhysicsAnalysis/TruthParticleID
#use JetEvent                    JetEvent-*                      Reconstruction/Jet
#use egammaEvent                 egammaEvent-*                   Reconstruction/egamma
#use muonEvent                   muonEvent-*                     Reconstruction/MuonIdentification/
#use tauEvent                    tauEvent-*                      Reconstruction
#use ITrackToVertex              ITrackToVertex-*                Reconstruction/RecoTools/


# This dependency sets up a minimal run-time environment for PhysicsAnalysis
#use AnalysisRunTime             AnalysisRunTime-*               PhysicsAnalysis/AnalysisCommon


### RTT tests [defunct]
# macro SUSYValidation_TestConfiguration "../test/SUSYValidation_TestConfiguration.xml"
# apply_pattern declare_runtime extras="../test/SUSYValidation_TestConfiguration.xml ../share/*.C ../share/*.py ../share/*.html"
### add validation of RTT xml file
# use TestPolicy TestPolicy-*
# apply_pattern validate_xml

### dual use [defunct]
#apply_pattern dual_use_library files=*.cxx

### tools in bin directory [defunct]
# apply_pattern declare_scripts files=" -s=$(SUSYValidation_root)/bin *.py"


#use AnalysisUtils               AnalysisUtils-*                 PhysicsAnalysis/AnalysisCommon
#use TruthHelper                 TruthHelper-*                   Generators/GenAnalysisTools
#use JetTagInfo                  JetTagInfo-*                    PhysicsAnalysis/JetTagging
#use MissingETEvent              MissingETEvent-*                Reconstruction
#use AthenaKernel                AthenaKernel-*                  Control
#use VxVertex                    VxVertex-*                      Tracking/TrkEvent
#use HepPDT                      v*                              LCG_Interfaces
#use ParticleEvent    ParticleEvent-*    PhysicsAnalysis/AnalysisCommon

#apply_tag ROOTMathLibs

private
#use CaloEvent                   CaloEvent-*                     Calorimeter
#use TrackToVertex               TrackToVertex-*                 Reconstruction/RecoTools/
#use TrkParameters               TrkParameters-*                 Tracking/TrkEvent
#use TrkParametersBase           TrkParametersBase-*             Tracking/TrkEvent
#use TrkTrack                    TrkTrack-*                      Tracking/TrkEvent
#use TrkTrackSummary             TrkTrackSummary-*               Tracking/TrkEvent
#use EventInfo                   EventInfo-*                     Event

use AtlasHepMC                  AtlasHepMC-*                    External
use GeneratorObjects            GeneratorObjects-*              Generators

end_private

