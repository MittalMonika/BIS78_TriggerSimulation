# Author: Noel Dawe (Noel.Dawe@cern.ch)
# TauDiscriminant standalone makefile

# --- External configuration ----------------------------------
ifeq ($(wildcard $(ROOTSYS)/test/Makefile.arch),)
    include $(ROOTSYS)/etc/Makefile.arch
else
    include $(ROOTSYS)/test/Makefile.arch
endif

# -------------------------------------------------------------
# General flags
# -------------------------------------------------------------
PACKAGE    = TauDiscriminant
OUTPUTDIR  = ../StandAlone
SRCDIR     = ../Root
HDIR       = ../$(PACKAGE)

# Get these from Makefile.arch above
#CC         = g++
#CCFLAGS    = -g -m32 -fPIC -Wall -W -Woverloaded-virtual -Wno-parentheses -Wno-unused-parameter -Wno-unused-variable
#LDFLAGS    = -g -m32 -fPIC 

MFLAGS     = -MM -Wall -W -Woverloaded-virtual
INCLUDES   += -I${ROOTSYS}/include -I.. -I$(HDIR) -I$(SRCDIR)
CPPFLAGS   += -D__STANDALONE

# Need these to avoid loading dependent libraries when ROOT starts
LINKLIBS = -L${ROOTSYS}/lib -lHist -lMatrix

# -------------------------------------------------------------
# ROOT Cint
# -------------------------------------------------------------
CINT       = taudiscriminantcint
LDEFFILE   = $(SRCDIR)/LinkDef.h
CINTFILE   = $(HDIR)/TauDiscriminantCint.cxx
CINTFILEH  = $(HDIR)/TauDiscriminantCint.h
CINTOBJ    = $(HDIR)/TauDiscriminantCint.o

SRC        = Types.cxx TauIDReader.cxx TauDetailsManagerStandalone.cxx MethodBase.cxx MethodDummy.cxx MethodTransform.cxx MethodBDT.cxx MethodCuts.cxx MethodLLH.cxx TreeVector.cxx Node.cxx TreeReader.cxx BoostedDecisionTree.cxx CommonLikelihood.cxx CutsDecisionTree.cxx Transformation.cxx
SOURCES    = $(addprefix $(SRCDIR)/,$(SRC)) $(CINTFILE)
HDR   	   = $(patsubst %.cxx,%.h,$(SRC))
HEADERS    = $(addprefix $(HDIR)/,$(HDR))
OBJECTS    = $(patsubst %.cxx,%.o,$(SOURCES))
DEPS       = $(patsubst %.h,%.d,$(HEADERS))

DICTS      = $(HDIR)/$(PACKAGE)Dict.h
SELECTION  = $(HDIR)/selection.xml

# -------------------------------------------------------------
# Libraries
# -------------------------------------------------------------
SHLIBFILE  = $(OUTPUTDIR)/lib$(PACKAGE).so

ifeq ($(PLATFORM),macosx)
EXTRALDFLAGS = -install_name @rpath/$(SHLIBFILE)
endif

# get libraries of ROOT
define ldlinksuffixROOT
   $(addsuffix $(LDLINKSUFFIX),$(Lib)) $(shell if [ "$(findstring -Ldlink2,$(OPTIONS))" ]; then echo $(addsuffix _pkgid_$(ROOTVER),$(Lib)); fi)
endef

# -------------------------------------------------------------
# Compilation
# -------------------------------------------------------------

default: shlib

# Implicit rule making all dependency Makefiles included at the end of this makefile
%.d: %.cxx $(HEADERS)
	@echo "Making $@"
	@set -e; $(CC) $(MFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) $< \
		| awk '{ sub("^$(notdir $*).o:","$*.o $@:") ; print }' > $@ ;\
		[ -s $@ ] || rm -f $@

# Implicit rule to compile all classes
%.o : %.cxx
	@echo "Compiling $<"
	@$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) -c $< -o $*.o 

# Rule to make ROOTCINT output file
$(CINTOBJ) : $(HEADERS) $(LDEFFILE)
	@echo "Running rootcint"
	@$(ROOTSYS)/bin/rootcint -f $(CINTFILE) -c -p  $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) $(HEADERS) $(LDEFFILE)
	@echo "Compiling $(CINTFILE)"
	@$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) -c $(CINTFILE) -o $@

rootcint : $(HEADERS) $(LDEFFILE)
	@echo "Running rootcint"
	$(ROOTSYS)/bin/rootcint -f $(CINTFILE) -c -p  $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) $(HEADERS) $(LDEFFILE)

# Rule to combine objects into a shared library
$(SHLIBFILE): $(OBJECTS)
	@echo "Linking $(SHLIBFILE)"
	@mkdir -p $(OUTPUTDIR)
	@rm -f $(SHLIBFILE)
	@$(LD) $(CXXFLAGS) $(SOFLAGS) $(LINKLIBS) $(EXTRALDFLAGS) $(OBJECTS) -o $(SHLIBFILE) 
	@rm -f $(OUTPUTDIR)/$(PACKAGE)Lib.so
	@ln -s $(SHLIBFILE) $(OUTPUTDIR)/$(PACKAGE)Lib.so 

-include $(DEPS)

taudiscriminantcint: $(CINTOBJ)
shlib: $(SHLIBFILE)

clean:
	@rm -f ../*/*.o ../*/*.d
